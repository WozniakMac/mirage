require 'rubygems'
require 'bundler/setup'
Bundler.setup(:test)
require 'rake'
require 'open-uri'
require 'cucumber'
require 'cucumber/rake/task'
require 'mechanize'
MOCKSERVER_URL = "http://localhost:7000"

module Web
  def get url, params={}
    if params[:body]
      response = Net::HTTP.start("localhost", 7000) do |http|
        request = Net::HTTP::Get.new(url)
        request.body=params[:body]
        http.request(request)
      end

      def response.code
        @code.to_i
      end

    else
      response = using_mechanize do |browser|
        browser.get("#{MOCKSERVER_URL}#{url}", params)
      end

    end

    response
  end

  def post url, params
    using_mechanize do |browser|
      browser.post("#{MOCKSERVER_URL}#{url}",params)
    end
  end

  private
  def using_mechanize
    begin
      browser = Mechanize.new
      browser.keep_alive = false
      response = yield browser

      def response.code
        @code.to_i
      end
    rescue Exception => e
      response = e

      def response.code
        self.response_code.to_i
      end
    end
    response
  end

end


include Web

def wait_until time=30
  start_time = Time.now
  until Time.now >= start_time + time
    sleep 0.1
    return if yield
  end
  raise 'timeout waiting'
end

task :gem => :clean do
  `gem build mirage.gemspec`
end

task :install => :gem do
  `gem install mirage`
end

Cucumber::Rake::Task.new(:features) do |t|
  t.cucumber_opts = "mode=regression features --format pretty"
end

task :start_mirage => :stop_mirage do
  %x[export RUBYOPT="" && mirage start]
end

task :stop_mirage do |task|
  %x[export RUBYOPT="" mirage stop]
  task.reenable
end


task :clean do |task|
  puts "cleaning"
  `gem uninstall -x mirage`
  task.reenable
end



task :default => [:install, :start_mirage, :features, :stop_mirage, :clean]